                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x000: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x00a: 718201000000000000   | 	jle remainings
0x013:                      | Loop1:
0x013: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x01d: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x027: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x031: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	
0x03b: 6288                 | 	andq %r8, %r8
0x03d: 715000000000000000   | 	jle test1
0x046: c0f00100000000000000 | 	iaddq $1, %rax
0x050:                      | test1:
0x050: 6299                 | 	andq %r9, %r9
0x052: 716500000000000000   | 	jle Loop2
0x05b: c0f00100000000000000 | 	iaddq $1, %rax
0x065:                      | Loop2:
0x065: 50871000000000000000 | 	mrmovq 16(%rdi), %r8
0x06f: 50971800000000000000 | 	mrmovq 24(%rdi), %r9
0x079: 40861000000000000000 | 	rmmovq %r8, 16(%rsi)
0x083: 40961800000000000000 | 	rmmovq %r9, 24(%rsi)
0x08d: 6288                 | 	andq %r8, %r8
0x08f: 71a200000000000000   | 	jle test2
0x098: c0f00100000000000000 | 	iaddq $1, %rax
0x0a2:                      | test2:
0x0a2: 6299                 | 	andq %r9, %r9
0x0a4: 71b700000000000000   | 	jle Loop3
0x0ad: c0f00100000000000000 | 	iaddq $1, %rax	
0x0b7:                      | Loop3:
0x0b7: 50872000000000000000 | 	mrmovq 32(%rdi), %r8
0x0c1: 50972800000000000000 | 	mrmovq 40(%rdi), %r9
0x0cb: 40862000000000000000 | 	rmmovq %r8, 32(%rsi)
0x0d5: 40962800000000000000 | 	rmmovq %r9, 40(%rsi)
0x0df: 6288                 | 	andq %r8, %r8
0x0e1: 71f400000000000000   | 	jle test3
0x0ea: c0f00100000000000000 | 	iaddq $1, %rax
0x0f4:                      | test3:
0x0f4: 6299                 | 	andq %r9, %r9
0x0f6: 710901000000000000   | 	jle Loop4
0x0ff: c0f00100000000000000 | 	iaddq $1, %rax	
0x109:                      | Loop4:
0x109: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x113: 50973800000000000000 | 	mrmovq 56(%rdi), %r9
0x11d: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)
0x127: 40963800000000000000 | 	rmmovq %r9, 56(%rsi)
0x131: 6288                 | 	andq %r8, %r8
0x133: 714601000000000000   | 	jle test4
0x13c: c0f00100000000000000 | 	iaddq $1, %rax
0x146:                      | test4:
0x146: 6299                 | 	andq %r9, %r9
0x148: 715b01000000000000   | 	jle testE
0x151: c0f00100000000000000 | 	iaddq $1, %rax	
0x15b:                      | testE:
0x15b: c0f74000000000000000 | 	iaddq $64, %rdi
0x165: c0f64000000000000000 | 	iaddq $64, %rsi
0x16f: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx
0x179: 751300000000000000   | 	jge Loop1
                            | 
0x182:                      | remainings:
0x182: c0f20800000000000000 | 	iaddq $8, %rdx
0x18c: 734603000000000000   | 	je Done
0x195: c0f2fcffffffffffffff | 	iaddq $-4, %rdx
0x19f: 75c401000000000000   | 	jge move4
0x1a8: c0f20200000000000000 | 	iaddq $2, %rdx
0x1b2: 75a302000000000000   | 	jge move2
0x1bb: 701d03000000000000   | 	jmp move1
                            | 	
0x1c4:                      | move4:
0x1c4: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x1ce: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x1d8: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x1e2: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x1ec: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x1f6: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x200: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x20a: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)
0x214: 6288                 | 	andq %r8, %r8
0x216: 712902000000000000   | 	jle m4a1
0x21f: c0f00100000000000000 | 	iaddq $1, %rax
0x229:                      | m4a1:
0x229: 6299                 | 	andq %r9, %r9
0x22b: 713e02000000000000   | 	jle m4a2
0x234: c0f00100000000000000 | 	iaddq $1, %rax
0x23e:                      | m4a2:
0x23e: 62aa                 | 	andq %r10, %r10
0x240: 715302000000000000   | 	jle m4a3
0x249: c0f00100000000000000 | 	iaddq $1, %rax
0x253:                      | m4a3:
0x253: 62bb                 | 	andq %r11, %r11
0x255: 716802000000000000   | 	jle m4a4
0x25e: c0f00100000000000000 | 	iaddq $1, %rax
0x268:                      | m4a4:
0x268: 6222                 | 	andq %rdx, %rdx
0x26a: 734603000000000000   | 	je Done
0x273: c0f72000000000000000 | 	iaddq $32, %rdi
0x27d: c0f62000000000000000 | 	iaddq $32, %rsi
0x287: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x291: 75a302000000000000   | 	jge move2
0x29a: 701d03000000000000   | 	jmp move1
                            | 
0x2a3:                      | move2:
0x2a3: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x2ad: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x2b7: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x2c1: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x2cb: 6288                 | 	andq %r8, %r8
0x2cd: 71e002000000000000   | 	jle m2a1
0x2d6: c0f00100000000000000 | 	iaddq $1, %rax
0x2e0:                      | m2a1:
0x2e0: 6299                 | 	andq %r9, %r9
0x2e2: 71f502000000000000   | 	jle m2a2
0x2eb: c0f00100000000000000 | 	iaddq $1, %rax
0x2f5:                      | m2a2:
0x2f5: 6222                 | 	andq %rdx, %rdx
0x2f7: 734603000000000000   | 	je Done
0x300: c0f71000000000000000 | 	iaddq $16, %rdi
0x30a: c0f61000000000000000 | 	iaddq $16, %rsi
0x314: 701d03000000000000   | 	jmp move1
                            | 
0x31d:                      | move1:	
0x31d: 50870000000000000000 | 	mrmovq (%rdi), %r8
0x327: 40860000000000000000 | 	rmmovq %r8, (%rsi)
0x331: 6288                 | 	andq %r8, %r8
0x333: 714603000000000000   | 	jle Done
0x33c: c0f00100000000000000 | 	iaddq $1, %rax
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x346:                      | Done:
0x346: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x347:                      | End:
                            | #/* $end ncopy-ys */
