#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	iaddq $-8, %rdx
	jl remainings
Loop1:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)	
	andq %r8, %r8
	jle test1
	iaddq $1, %rax
test1:
	andq %r9, %r9
	jle Loop2
	iaddq $1, %rax
Loop2:
	mrmovq 16(%rdi), %r8
	mrmovq 24(%rdi), %r9
	rmmovq %r8, 16(%rsi)
	rmmovq %r9, 24(%rsi)
	andq %r8, %r8
	jle test2
	iaddq $1, %rax
test2:
	andq %r9, %r9
	jle Loop3
	iaddq $1, %rax	
Loop3:
	mrmovq 32(%rdi), %r8
	mrmovq 40(%rdi), %r9
	rmmovq %r8, 32(%rsi)
	rmmovq %r9, 40(%rsi)
	andq %r8, %r8
	jle test3
	iaddq $1, %rax
test3:
	andq %r9, %r9
	jle Loop4
	iaddq $1, %rax	
Loop4:
	mrmovq 48(%rdi), %r8
	mrmovq 56(%rdi), %r9
	rmmovq %r8, 48(%rsi)
	rmmovq %r9, 56(%rsi)
	andq %r8, %r8
	jle test4
	iaddq $1, %rax
test4:
	andq %r9, %r9
	jle testE
	iaddq $1, %rax	
testE:
	iaddq $64, %rdi
	iaddq $64, %rsi
	iaddq $-8, %rdx
	jge Loop1

remainings:
	iaddq $8, %rdx
	je Done
	iaddq $-4, %rdx
	jge move4
	iaddq $2, %rdx
	jge move2
	jmp move1

move4:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	rmmovq %r10, 16(%rsi)
	rmmovq %r11, 24(%rsi)
	andq %r8, %r8
	jle m4a1
	iaddq $1, %rax
m4a1:
	andq %r9, %r9
	jle m4a2
	iaddq $1, %rax
m4a2:
	andq %r10, %r10
	jle m4a3
	iaddq $1, %rax
m4a3:
	andq %r11, %r11
	jle m4a4
	iaddq $1, %rax
m4a4:
	andq %rdx, %rdx
	je Done
	iaddq $32, %rdi
	iaddq $32, %rsi
	iaddq $-2, %rdx
	jge move2
	jmp move1

move2:
	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	rmmovq %r8, (%rsi)
	rmmovq %r9, 8(%rsi)
	andq %r8, %r8
	jle m2a1
	iaddq $1, %rax
m2a1:
	andq %r9, %r9
	jle m2a2
	iaddq $1, %rax
m2a2:
	andq %rdx, %rdx
	je Done
	iaddq $16, %rdi
	iaddq $16, %rsi
	jmp move1

move1:	
	mrmovq (%rdi), %r8
	rmmovq %r8, (%rsi)
	andq %r8, %r8
	jle Done
	iaddq $1, %rax
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
