                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
0x018:                      | .align 8
                            | # Source block
0x018: 0a00000000000000     | src:    .quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x030: 1101000000000000     | dest:   .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | 
                            | 
0x048: 30f71800000000000000 | main:   irmovq src,%rdi	
0x052: 30f63000000000000000 |     irmovq dest, %rsi
0x05c: 30f20300000000000000 | 	irmovq $3,%rdx  # len = 3
0x066: 807000000000000000   | 	call copy		# copy(src, dest, len)
0x06f: 90                   | 	ret 
                            | 
                            | # long copy(long *src, long *dest, long len)
                            | # src in %rdi, dest in %rsi, len in %rdx
0x070: 30f80800000000000000 | copy:    irmovq $8,%r8           # Constant 8
0x07a: 30f90100000000000000 |     irmovq $1, %r9               # Constant 1
0x084: 6300                 |     xorq %rax, %rax              # Clear rax
0x086: 50170000000000000000 | loop:   mrmovq (%rdi), %rcx          # Load src[0] into rcx
0x090: 6310                 |     xorq %rcx, %rax              # checksum in rax
0x092: 40160000000000000000 |     rmmovq %rcx, (%rsi)          # Store src[0] into dest[0]
0x09c: 6087                 |     addq %r8, %rdi               # Increment src
0x09e: 6086                 |     addq %r8, %rsi               # Increment dest
0x0a0: 6192                 |     subq %r9, %rdx               # Decrement len
0x0a2: 748600000000000000   |     jne loop                     # If len != 0, repeat loop
0x0ab: 90                   |     ret                          # Return to caller
                            | 
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | stack:	 
