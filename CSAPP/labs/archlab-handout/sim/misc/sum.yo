                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 804800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Linked list of 3 elements
                            | # Sample linked list
0x018:                      |     .align 8
0x018: 0a00000000000000     | ele1:   .quad 0x00a
0x020: 2800000000000000     |     .quad ele2
0x028: b000000000000000     | ele2:   .quad 0x0b0
0x030: 3800000000000000     |     .quad ele3
0x038: 000c000000000000     | ele3:   .quad 0xc00
0x040: 0000000000000000     |     .quad 0
                            | 
0x048: 30f71800000000000000 | main:   irmovq ele1,%rdi	
0x052: 30f60400000000000000 | 	irmovq $4,%rsi
0x05c: 806600000000000000   | 	call sum		# absSum(array, 4)
0x065: 90                   | 	ret 
                            | 
                            | # long sum(long *list)
                            | # list in %rdi
0x066: 30f80800000000000000 | sum:    irmovq $8,%r8           # Constant 8
0x070: 6300                 | 	xorq %rax,%rax		# sum = 0
0x072: 50370000000000000000 | loop:   mrmovq (%rdi), %rbx   # Load list.val into %rbx
0x07c: 6030                 |     addq %rbx, %rax       # sum += list.val
0x07e: 6087                 |     addq %r8, %rdi        # rdi = &list.next
0x080: 50370000000000000000 |     mrmovq (%rdi), %rbx   # Load list.next into %rbx
0x08a: 6233                 |     andq %rbx, %rbx       # Check if list.next == 0
0x08c: 73a000000000000000   |     je done               # If list.next == 0, jump to done
0x095: 2037                 |     rrmovq %rbx, %rdi     # list = list.next
0x097: 707200000000000000   |     jmp loop              # Jump to loop
0x0a0: 90                   | done:   ret
                            | 
                            | # The stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200		
0x200:                      | stack:	 
